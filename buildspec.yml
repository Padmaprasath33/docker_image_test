version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18 
  pre_build:
    commands:
      # Step 1: Login to AWS ECR 
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 500452054617.dkr.ecr.us-east-1.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:  
    commands:
      # Step 3: Build Docker image
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t 500452054617.dkr.ecr.us-east-1.amazonaws.com/2191420-cohort-demo-ui:$IMAGE_TAG .
      - docker tag 500452054617.dkr.ecr.us-east-1.amazonaws.com/2191420-cohort-demo-ui:$IMAGE_TAG 500452054617.dkr.ecr.us-east-1.amazonaws.com/2191420-cohort-demo-ui:$IMAGE_TAG
  post_build:
    commands: 
      # Step 4: Push Docker image to AWS ECR
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push 500452054617.dkr.ecr.us-east-1.amazonaws.com/2191420-cohort-demo-ui:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"cohort_demo_ecs_container","imageUri":"%s"}]' 500452054617.dkr.ecr.us-east-1.amazonaws.com/2191420-cohort-demo-ui:$IMAGE_TAG > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' 500452054617.dkr.ecr.us-east-1.amazonaws.com/2191420-cohort-demo-ui:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - 'image*.json'
    - 'appspec.yml'
    - 'taskdef.json'
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json